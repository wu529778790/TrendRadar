name: Hot News Crawler

on:
  schedule:
    # 我们使用的是 github 官方提供的资源来进行的推送，而每个账号的资源是限额的，为了不被官方判定为滥用而面临封号的风险，不建议比半小时更低
    - cron: "0 * * * *" # 每小时整点运行一次(实际有偏差) 或者 "*/30 * * * *" (每半小时执行一次) 或者 "*/30 0-14 * * *"(每天早上 8 点到晚上 10 点期间，每半小时运行一次)
  workflow_dispatch:

# 添加权限设置
permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify required files
        run: |
          echo "🔍 检查必需的配置文件..."

          if [ ! -f config/config.yaml ]; then
            echo "❌ 错误: config/config.yaml 文件不存在"
            echo "请参考项目文档创建配置文件"
            exit 1
          fi

          if [ ! -f config/frequency_words.txt ]; then
            echo "❌ 错误: config/frequency_words.txt 文件不存在"
            echo "请参考项目文档创建频率词配置文件"
            exit 1
          fi

          echo "✅ 配置文件检查通过"

      - name: Run crawler
        env:
          FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DINGTALK_WEBHOOK_URL: ${{ secrets.DINGTALK_WEBHOOK_URL }}
          WEWORK_WEBHOOK_URL: ${{ secrets.WEWORK_WEBHOOK_URL }}
          GITHUB_ACTIONS: true
        run: python main.py

      - name: Setup GitHub Pages
        run: |
          echo "🔧 设置 GitHub Pages 目录结构..."

          # 创建 docs 目录
          mkdir -p docs

          # 创建 Jekyll 配置文件
          cat << 'EOF' > docs/_config.yml
title: TrendRadar
description: 热点新闻爬虫与趋势分析工具
baseurl: ""
url: ""

# Build settings
markdown: kramdown
theme: jekyll-theme-primer

# Exclude files
exclude:
  - README.md
  - requirements.txt
  - main.py
  - docker/
  - config/
  - .github/
  - .dockerignore

# Navigation
navigation:
  - title: 主页
    url: /
  - title: 最新新闻
    url: /latest/
  - title: 关于
    url: /about/
EOF

          # 创建主页
          cat << 'EOF' > docs/index.md
---
layout: default
title: TrendRadar - 热点新闻爬虫与趋势分析工具
---

# 🎯 TrendRadar

**热点新闻爬虫与趋势分析工具**

## 📋 项目简介

TrendRadar 是一个自动化的新闻爬虫系统，能够实时监控各大新闻平台，收集热点新闻，并通过多种方式推送给用户。

## ✨ 主要功能

- 🔍 **多平台监控**: 支持多个新闻平台的实时监控
- 📊 **趋势分析**: 自动分析新闻趋势和热点话题
- 📱 **多渠道推送**: 支持飞书、Telegram、企业微信、钉钉等多种推送方式
- ⏰ **定时更新**: 每小时自动更新，确保信息的时效性
- 📄 **报告生成**: 自动生成每日汇总报告

## 📁 最新报告

查看最新的新闻报告：

- [今日汇总报告](./latest/)
- [历史报告](./archive/)

## 🛠️ 技术栈

- **后端**: Python
- **部署**: Docker, GitHub Actions
- **文档**: Jekyll (GitHub Pages)

---

*由 GitHub Actions 自动构建和部署*
EOF

          echo "✅ GitHub Pages 目录结构设置完成"

      - name: Copy reports to docs
        run: |
          echo "📋 复制报告文件到 docs 目录..."

          # 查找最新的输出目录
          LATEST_DIR=$(ls -td output/*/ | head -1)
          if [ -d "$LATEST_DIR" ]; then
            echo "📁 找到最新目录: $LATEST_DIR"

            # 复制 HTML 文件到 docs 目录
            if [ -d "$LATEST_DIR/html" ]; then
              cp -r $LATEST_DIR/html/* docs/
              echo "✅ 已复制 HTML 报告文件"
            fi

            # 复制 TXT 文件到 docs 目录
            if [ -d "$LATEST_DIR/txt" ]; then
              mkdir -p docs/txt
              cp -r $LATEST_DIR/txt/* docs/txt/
              echo "✅ 已复制 TXT 报告文件"
            fi
          else
            echo "⚠️ 未找到输出目录"
          fi

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update by GitHub Actions at $(TZ=Asia/Shanghai date)" && git push)
